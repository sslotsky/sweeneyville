// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List           = require("bs-platform/lib/js/list.js");
var Curry          = require("bs-platform/lib/js/curry.js");
var Caml_oo_curry  = require("bs-platform/lib/js/caml_oo_curry.js");
var CamlinternalOO = require("bs-platform/lib/js/camlinternalOO.js");

var shared = [
  "move",
  "stop",
  "tick"
];

var class_tables = [
  0,
  0,
  0
];

function control(player, direction) {
  if (!class_tables[0]) {
    var $$class = CamlinternalOO.create_table(shared);
    var env = CamlinternalOO.new_variable($$class, "");
    var ids = CamlinternalOO.new_methods_variables($$class, [
          "tick",
          "stop",
          "setMoving",
          "move"
        ], ["moving"]);
    var tick = ids[0];
    var stop = ids[1];
    var setMoving = ids[2];
    var move = ids[3];
    var moving = ids[4];
    CamlinternalOO.set_methods($$class, /* array */[
          move,
          (function (self$1, _) {
              return Curry._2(self$1[0][setMoving], self$1, /* true */1);
            }),
          stop,
          (function (self$1, _) {
              return Curry._2(self$1[0][setMoving], self$1, /* false */0);
            }),
          tick,
          (function (self$1, _) {
              var env$1 = self$1[env];
              var match = self$1[moving][0];
              if (match !== 0) {
                var tmp = env$1[0];
                return Caml_oo_curry.js2(-933174511, 4, tmp, env$1[1]);
              } else {
                return /* () */0;
              }
            }),
          setMoving,
          (function (self$1, m) {
              self$1[moving][0] = m;
              return /* () */0;
            })
        ]);
    var env_init = function (env$1) {
      var self = CamlinternalOO.create_object_opt(0, $$class);
      self[moving] = [/* false */0];
      self[env] = env$1;
      return self;
    };
    CamlinternalOO.init_class($$class);
    class_tables[0] = env_init;
  }
  return Curry._1(class_tables[0], [
              player,
              direction
            ]);
}

var class_tables$1 = [
  0,
  0,
  0
];

function controller(player) {
  if (!class_tables$1[0]) {
    var $$class = CamlinternalOO.create_table(shared);
    var ids = CamlinternalOO.new_methods_variables($$class, [
          "tick",
          "stop",
          "move",
          "control"
        ], [
          "down",
          "up",
          "left",
          "right"
        ]);
    var tick = ids[0];
    var stop = ids[1];
    var move = ids[2];
    var control$1 = ids[3];
    var down = ids[4];
    var up = ids[5];
    var left = ids[6];
    var right = ids[7];
    CamlinternalOO.set_methods($$class, /* array */[
          move,
          (function (self$2, d) {
              var control$2 = Curry._2(self$2[0][control$1], self$2, d);
              if (control$2) {
                var tmp = control$2[0];
                return Caml_oo_curry.js2(-933174511, 11, tmp, /* () */0);
              } else {
                return /* () */0;
              }
            }),
          stop,
          (function (self$2, d) {
              var control$2 = Curry._2(self$2[0][control$1], self$2, d);
              if (control$2) {
                var tmp = control$2[0];
                return Caml_oo_curry.js2(-866390014, 13, tmp, /* () */0);
              } else {
                return /* () */0;
              }
            }),
          tick,
          (function (self$2, _) {
              return List.iter((function (d) {
                            return Caml_oo_curry.js2(-855850147, 14, d, /* () */0);
                          }), /* :: */[
                          self$2[down],
                          /* :: */[
                            self$2[up],
                            /* :: */[
                              self$2[left],
                              /* :: */[
                                self$2[right],
                                /* [] */0
                              ]
                            ]
                          ]
                        ]);
            }),
          control$1,
          (function (self$2, d) {
              switch (d) {
                case 0 : 
                    return /* Control */[self$2[up]];
                case 1 : 
                    return /* Control */[self$2[down]];
                case 2 : 
                    return /* Control */[self$2[left]];
                case 3 : 
                    return /* Control */[self$2[right]];
                case 4 : 
                    return /* None */0;
                
              }
            })
        ]);
    var env_init = function (env) {
      var self = CamlinternalOO.create_object_opt(0, $$class);
      self[down] = control(env[1], /* Down */1);
      self[up] = control(env[1], /* Up */0);
      self[left] = control(env[1], /* Left */2);
      self[right] = control(env[1], /* Right */3);
      return self;
    };
    CamlinternalOO.init_class($$class);
    class_tables$1[0] = env_init;
  }
  return Curry._1(class_tables$1[0], [
              0,
              player
            ]);
}

exports.control    = control;
exports.controller = controller;
/* No side effect */
