// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var $$Array        = require("bs-platform/lib/js/array.js");
var Curry          = require("bs-platform/lib/js/curry.js");
var Caml_oo_curry  = require("bs-platform/lib/js/caml_oo_curry.js");
var CamlinternalOO = require("bs-platform/lib/js/camlinternalOO.js");

var class_tables = [
  0,
  0,
  0
];

function scene(width, height, characters) {
  if (!class_tables[0]) {
    var $$class = CamlinternalOO.create_table([
          "top_bound",
          "width",
          "tick",
          "right_bound",
          "bottom_bound",
          "height",
          "left_bound"
        ]);
    var env = CamlinternalOO.new_variable($$class, "");
    var ids = CamlinternalOO.get_method_labels($$class, [
          "width",
          "top_bound",
          "tick",
          "right_bound",
          "left_bound",
          "height",
          "bottom_bound"
        ]);
    var width$1 = ids[0];
    var top_bound = ids[1];
    var tick = ids[2];
    var right_bound = ids[3];
    var left_bound = ids[4];
    var height$1 = ids[5];
    var bottom_bound = ids[6];
    CamlinternalOO.set_methods($$class, /* array */[
          tick,
          (function (self$1, _) {
              return $$Array.iter((function (c) {
                            return Caml_oo_curry.js2(-855850147, 2, c, self$1);
                          }), self$1[env][2]);
            }),
          left_bound,
          (function (self$1, _) {
              return 0.0 - self$1[env][1] / 2.0;
            }),
          right_bound,
          (function (self$1, _) {
              return self$1[env][1] / 2.0;
            }),
          bottom_bound,
          (function (self$1, _) {
              return self$1[env][0] / 2.0;
            }),
          top_bound,
          (function (self$1, _) {
              return 0.0 - self$1[env][0] / 2.0;
            }),
          width$1,
          (function (self$1, _) {
              return self$1[env][1];
            }),
          height$1,
          (function (self$1, _) {
              return self$1[env][0];
            })
        ]);
    var env_init = function (env$1) {
      var self = CamlinternalOO.create_object_opt(0, $$class);
      self[env] = env$1;
      return self;
    };
    CamlinternalOO.init_class($$class);
    class_tables[0] = env_init;
  }
  return Curry._1(class_tables[0], [
              height,
              width,
              characters
            ]);
}

exports.scene = scene;
/* No side effect */
